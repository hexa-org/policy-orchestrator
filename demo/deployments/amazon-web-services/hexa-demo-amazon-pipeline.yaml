resource_types:
  - name: kpack-image
    type: registry-image
    source:
      repository: gcr.io/cf-build-service-public/concourse-kpack-resource
      tag: "1.0"

resources:
  - name: hexa-demo-amazon-image
    type: registry-image
    source:
      repository: registry.${REGISTRY_DOMAIN}/kpack/hexa-demo-amazon

  - name: hexa-demo-amazon-source-code
    type: git
    source:
      uri: https://github.com/hexa-org/policy-orchestrator
      branch: main

  - name: hexa-demo-amazon-build-service
    type: kpack-image
    source:
      image: hexa-demo-amazon-image
      namespace: hexa-demo-amazon
      gke:
        json_key: ((service-account-key))
        kubeconfig: ((kubeconfig))

  - name: kubernetes-task-image
    type: registry-image
    source:
      repository: registry.${REGISTRY_DOMAIN}/concourse-images/cluster-mgmt
      tag: latest

jobs:
  - name: build-hexa-demo-amazon-image
    plan:
      - get: hexa-demo-amazon-source-code
        trigger: true
      - put: hexa-demo-amazon-build-service
        params:
          commitish: hexa-demo-amazon-source-code/.git/ref

  - name: deploy-hexa-demo-amazon
    plan:
      - get: hexa-demo-amazon-image
      - get: hexa-demo-amazon-source-code
      - get: hexa-demo-amazon-build-service
        passed:
          - build-hexa-demo-amazon-image
        trigger: true
      - get: kubernetes-task-image
      - task: deploy-kubernetes
        image: kubernetes-task-image
        config:
          platform: linux
          inputs:
            - name: hexa-demo-amazon-source-code
          params:
            KUBECONFIG: ((kubeconfig))
            DOMAIN: ((domain))
            K8S_CLUSTER_NAME: ((cluster_name))
            K8S_SERVICE_ACCOUNT_JSON: ((service_account_json))
          run:
            path: sh
            args:
              - -sc
              - |
                echo "${DOLLAR}KUBECONFIG" > config.yml
                export KUBECONFIG=config.yml
                export IMAGE=$(kubectl get image hexa-demo-amazon-image -n hexa-demo-amazon -o jsonpath="{.status.latestImage}")
                envsubst < ./hexa-demo-amazon-source-code/deployments/amazon-web-services/hexa-demo-amazon.yaml > amazon-web-services-hexa-demo.yaml
                unset KUBECONFIG

                export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} 
                export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
                aws eks --region ${AWS_REGION} update-kubeconfig --name ${K8S_CLUSTER_NAME}
                kubectl create namespace hexa-demo-amazon
                kubectl apply -f amazon-web-services-hexa-demo.yaml