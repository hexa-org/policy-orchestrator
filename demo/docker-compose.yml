name: hexa_orchestrator_demo

services:
  hexa-orchestrator:
    image: hexaorchestrator
    container_name: hexa-orchestrator
    ports:
      - "8885:8885"
    command: /app/hexaOrchestrator
    environment:
      ORCHESTRATOR_HOSTPORT: hexa-orchestrator:8885
      ORCHESTRATOR_KEY: 0861f51ab66590798406be5b184c71b637bfc907c83f27d461e4956bffebf6cb
      ORCHESTRATOR_CONFIG_FILE: /app/.hexa/config.json
    external_links:
      - hexa-opaBundle-server
    volumes:
      - "./databases/docker_support:/home/databases/docker_support:ro"
      - "./deployments/hexaOrchestrator/config:/app/.hexa"


  hexa-admin-ui:
    image: hexaorchestrator
    container_name: hexa-admin-ui
    ports:
      - "8884:8884"
    command: /app/hexaAdminUi
    environment:
      ORCHESTRATOR_URL: http://hexa-orchestrator:8885
      ORCHESTRATOR_KEY: 0861f51ab66590798406be5b184c71b637bfc907c83f27d461e4956bffebf6cb
    depends_on:
      - hexa-orchestrator

  # demo-app is the Hexa Industries test application used for demoing OPA policy services. From: github.com/hexa-org/policy-opa
  hexa-industry-demo-app:
    image: independentid/hexaopa:latest
    container_name: hexa-demo
    ports:
      - "8886:8886"
    command: /app/hexaIndustriesDemo
    depends_on:
      - hexa-opa-agent
    environment:
      PORT: 8886
      OPA_SERVER_URL: http://hexa-opa-server:8887/v1/data/hexaPolicy

  # hexa-opaBundle-server is an HTTP Bundle endpoint that can be used by Hexa-Orchestrator or Hexa CLI to configure policy to be delivered to OPA Servers.
  # From: github.com/hexa-org/policy-opa
  hexa-opaBundle-server:
    image: independentid/hexaopa:latest
    container_name: hexa-opaBundle-server
    ports:
      - "8889:8889"
    command: /app/hexaBundleServer
    environment:
      PORT: 8889
      TKN_DIRECTORY: "/home/certs"
      HEXA_CERT_DIRECTORY: "/home/certs"
      SERVER_CERT: "/home/certs/server-cert.pem"
      SERVER_KEY: "/home/certs/server-key.pem"
      BUNDLE_DIR: "/home/resources/bundles"
      SERVER_DNS_NAME: "hexa-opaBundle-server"
      TKN_MODE: "ANON"
    volumes:
      - "./deployments/hexaBundleServer/resources:/home/resources"
      - "./.certs:/home/certs"

  # hexa-opa-agent is an OPA Server instance extended to support IDQL Filter expressions (run time evaluation)
  # From: github.com/hexa-org/policy-opa
  hexa-opa-agent:
    image: independentid/hexaopa:latest
    container_name: hexa-opa-server
    expose:
      - "8887"
    depends_on:
      - hexa-opaBundle-server
    command: /app/hexaOpa run --server --addr :8887 --log-level debug -c /home/config/config.yaml
    environment:
      # These environment values are referenced in ./deployments/hexaOpaServer/config/config.yaml
      HEXA_CERT_DIRECTORY: "/home/certs"
      HEXA_CONFIG_URL: "https://hexa-opaBundle-server:8889"
      HEXA_CA_CERT: "/home/certs/ca-cert.pem"
    volumes:
      - "./deployments/hexaOpaServer/config:/home/config:ro"
      - "./deployments/hexaOpaServer/.opa:/app/.opa"
      - "./.certs:/home/certs:ro"

  postgres:
    image: postgres:alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - keycloak_network

  keycloak:
    image: quay.io/keycloak/keycloak:23.0.6
    command: start
    environment:
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8080
      KC_HOSTNAME_STRICT_BACKCHANNEL: false
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres/${POSTGRES_DB}
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - 8080:8080
    restart: always
    depends_on:
      - postgres
    networks:
      - keycloak_network

volumes:
  postgres_data:
    driver: local

networks:
  keycloak_network:
    driver: bridge
