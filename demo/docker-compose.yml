name: hexa_orchestrator_demo

services:
  hexa-orchestrator:
    image: hexaorchestrator
    container_name: hexa-orchestrator
    ports:
      - "8885:8885"
    command: /app/hexaOrchestrator
    networks:
      - hexa_network
    environment:
      ORCHESTRATOR_HOSTPORT: hexa-orchestrator:8885
      HEXA_TLS_ENABLED: true
      HEXA_CERT_DIRECTORY: "/home/certs"
      HEXA_SERVER_CERT: "/home/certs/server-hexaorchestrator-cert.pem"
      HEXA_SERVER_KEY_PATH: "/home/certs/server-hexaorchestrator-key.pem"
      HEXA_SERVER_DNS_NAME: "hexa-orchestrator,localhost"
      HEXA_JWT_REALM: Hexa-Orchestrator-Realm
      HEXA_TOKEN_JWKSURL: http://keycloak:8080/realms/Hexa-Orchestrator-Realm/protocol/openid-connect/certs
      HEXA_JWT_AUTH_ENABLE: true
      HEXA_JWT_AUDIENCE: http://hexa-orchestrator:8885
      HEXA_JWT_SCOPE: orchestrator
      ORCHESTRATOR_CONFIG_FILE: /app/.hexa/config.json
    external_links:
      - hexa-opaBundle-server
    volumes:
      - "./databases/docker_support:/home/databases/docker_support:ro"
      - "./deployments/hexaOrchestrator/config:/app/.hexa"
      - "./.certs:/home/certs"


  hexa-admin-ui:
    image: hexaorchestrator
    container_name: hexa-admin-ui
    hostname: admin.hexa.org
    ports:
      - "8884:8884"
    command: /app/hexaAdminUi
    networks:
      - hexa_network
    environment:
      ORCHESTRATOR_URL: https://hexa-orchestrator:8885
      # HEXA_CA_CERT used to install the self-signed CA trust root to call Orchestrator service
      HEXA_CA_CERT: "/home/certs/ca-cert.pem"
      HEXA_TLS_ENABLED: false
      HEXA_CERT_DIRECTORY: "/home/certs"
      HEXA_SERVER_CERT: "/home/certs/server-hexa-admin-cert.pem"
      HEXA_SERVER_KEY_PATH: "/home/certs/server-hexa-admin-key.pem"
      HEXA_SERVER_DNS_NAME: "admin.hexa.org,localhost"
      HEXA_JWT_REALM: Hexa-Orchestrator-Realm
      HEXA_JWT_AUTH_ENABLE: true
      HEXA_OAUTH_CLIENT_ID: hexaclient
      HEXA_OAUTH_CLIENT_SECRET: "uuXVzfbqH635Ob0oTON1uboONUqasmTt"
      HEXA_OAUTH_TOKEN_ENDPOINT: http://keycloak:8080/realms/Hexa-Orchestrator-Realm/protocol/openid-connect/token
      HEXA_OIDC_ENABLED: true
      HEXA_OIDC_PROVIDER_URL: http://keycloak:8080/realms/Hexa-Orchestrator-Realm
      HEXA_OIDC_REDIRECT_URL: http://admin.hexa.org:8884/redirect
    volumes:
      - "./.certs:/home/certs"
    depends_on:
      - hexa-orchestrator

  # demo-app is the Hexa Industries test application used for demoing OPA policy services. From: github.com/hexa-org/policy-opa
  hexa-industry-demo-app:
    image: independentid/hexaopa:latest
    pull_policy: always
    container_name: hexa-demo
    hostname: demo.hexa.org
    ports:
      - "8886:8886"
    command: /app/hexaIndustriesDemo
    depends_on:
      - hexa-opa-agent
    networks:
      - hexa_network
    environment:
      PORT: 8886
      OPA_SERVER_URL: https://hexa-opa-server:8887/v1/data/hexaPolicy
      # HEXAOPA_DETAIL enables debug responses in console  notes, fails, full, debug
      HEXAOPA_DETAIL: "notes"
      # HEXA_CA_CERT is used to trust self-signed TLS keys for hexa-opa-sidecar (OPA_SERVER_URL)
      HEXA_CA_CERT: "/home/certs/ca-cert.pem"
      HEXA_CERT_DIRECTORY: "/home/certs"
      HEXA_OIDC_ENABLED: true
      HEXA_OIDC_CLIENT_ID: hexaclient
      HEXA_OIDC_CLIENT_SECRET: "uuXVzfbqH635Ob0oTON1uboONUqasmTt"
      HEXA_OIDC_PROVIDER_URL: "http://keycloak:8080/realms/Hexa-Orchestrator-Realm"
      # If TLS enabled, OIDC redirect must be changed to https
      HEXA_OIDC_REDIRECT_URL: "http://demo.hexa.org:8886/redirect"
      HEXA_TLS_ENABLED: false
      # Following only used when HEXA_TLS_ENABLED=true and auto generate keys enabled (default)
      HEXA_SERVER_CERT: "/home/certs/server-hexademo-cert.pem"
      HEXA_SERVER_KEY_PATH: "/home/certs/server-hexademo-key.pem"
      HEXA_SERVER_DNS_NAME: "demo.hexa.org,localhost"
    volumes:
      - "./.certs:/home/certs:ro"

  # hexa-opaBundle-server is an HTTP Bundle endpoint that can be used by Hexa-Orchestrator or Hexa CLI to configure policy to be delivered to OPA Servers.
  # From: github.com/hexa-org/policy-opa
  hexa-opaBundle-server:
    image: independentid/hexaopa:latest
    container_name: hexa-opaBundle-server
    pull_policy: always # ensure we have the latest update
    ports:
      - "8889:8889"
    command: /app/hexaBundleServer

    environment:
      PORT: 8889
      HEXA_TKN_DIRECTORY: "/home/certs"
      HEXA_TLS_ENABLED: true
      HEXA_CERT_DIRECTORY: "/home/certs"
      HEXA_SERVER_CERT: "/home/certs/hexa-opabundle-server-cert.pem"
      HEXA_SERVER_KEY_PATH: "/home/certs/hexa-opabundle-server-key.pem"
      HEXA_SERVER_DNS_NAME: hexa-opaBundle-server
      BUNDLE_DIR: "/home/resources/bundles"
      HEXA_TKN_MODE: "ANON"
    networks:
      - hexa_network
    volumes:
      - "./deployments/hexaBundleServer/resources:/home/resources"
      - "./.certs:/home/certs"

  # hexa-opa-agent is an OPA Server instance extended to support IDQL Filter expressions (run time evaluation)
  # From: github.com/hexa-org/policy-opa
  hexa-opa-agent:
    image: independentid/hexaopa:latest
    pull_policy: always
    container_name: hexa-opa-server
    expose:
      - "8887"
    depends_on:
      - hexa-opaBundle-server
    command: /app/hexaOpa run --server --addr :8887 --tls-cert-file=/home/certs/hexaOpa-cert.pem --tls-private-key-file=/home/certs/hexaOpa-key.pem --log-level debug -c /home/config/config.yaml
    environment:
      # These environment values are referenced in ./deployments/hexaOpaServer/config/config.yaml
      HEXA_CONFIG_URL: "https://hexa-opaBundle-server:8889"
      HEXA_CA_CERT: "/home/certs/ca-cert.pem"
      HEXA_CERT_DIRECTORY: "/home/certs"
      HEXA_SERVER_CERT: "/home/certs/hexaOpa-cert.pem"
      HEXA_SERVER_KEY_PATH: "/home/certs/hexaOpa-key.pem"
      HEXA_SERVER_DNS_NAME: "hexa-opa-server"

    volumes:
      - "./deployments/hexaOpaServer/config:/home/config:ro"
      - "./deployments/hexaOpaServer/.opa:/app/.opa"
      - "./.certs:/home/certs"
    networks:
      - hexa_network

networks:
  hexa_network:
    name: hexa_shared_hexa_network
    external: true